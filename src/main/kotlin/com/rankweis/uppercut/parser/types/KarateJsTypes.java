package com.rankweis.uppercut.parser.types;

import com.intellij.psi.tree.IElementType;
import io.karatelabs.js.Type;
import java.util.HashMap;
import java.util.Map;

public class KarateJsTypes {

  public static IElementType CHUNK = new KarateJsElementType("CHUNK");
  public static IElementType ROOT = new KarateJsElementType("ROOT");
  public static IElementType PROGRAM = new KarateJsElementType("PROGRAM");
  public static IElementType STATEMENT = new KarateJsElementType("STATEMENT");
  public static IElementType IF_STMT = new KarateJsElementType("IF_STMT");
  public static IElementType VAR_STMT = new KarateJsElementType("VAR_STMT");
  public static IElementType VAR_STMT_NAMES = new KarateJsElementType("VAR_STMT_NAMES");
  public static IElementType RETURN_STMT = new KarateJsElementType("RETURN_STMT");
  public static IElementType TRY_STMT = new KarateJsElementType("TRY_STMT");
  public static IElementType THROW_STMT = new KarateJsElementType("THROW_STMT");
  public static IElementType FOR_STMT = new KarateJsElementType("FOR_STMT");
  public static IElementType WHILE_STMT = new KarateJsElementType("WHILE_STMT");
  public static IElementType SWITCH_STMT = new KarateJsElementType("SWITCH_STMT");
  public static IElementType CASE_BLOCK = new KarateJsElementType("CASE_BLOCK");
  public static IElementType DEFAULT_BLOCK = new KarateJsElementType("DEFAULT_BLOCK");
  public static IElementType BREAK_STMT = new KarateJsElementType("BREAK_STMT");
  public static IElementType DELETE_STMT = new KarateJsElementType("DELETE_STMT");
  public static IElementType BLOCK = new KarateJsElementType("BLOCK");
  public static IElementType EOS = new KarateJsElementType("EOS");
  public static IElementType EXPR = new KarateJsElementType("EXPR");
  public static IElementType FN_EXPR = new KarateJsElementType("FN_EXPR");
  public static IElementType FN_ARROW_EXPR = new KarateJsElementType("FN_ARROW_EXPR");
  public static IElementType FN_DECL_ARGS = new KarateJsElementType("FN_DECL_ARGS");
  public static IElementType FN_DECL_ARG = new KarateJsElementType("FN_DECL_ARG");
  public static IElementType NEW_EXPR = new KarateJsElementType("NEW_EXPR");
  public static IElementType TYPEOF_EXPR = new KarateJsElementType("TYPEOF_EXPR");
  public static IElementType INSTANCEOF_EXPR = new KarateJsElementType("INSTANCEOF_EXPR");
  public static IElementType FN_CALL_EXPR = new KarateJsElementType("FN_CALL_EXPR");
  public static IElementType FN_CALL_ARGS = new KarateJsElementType("FN_CALL_ARGS");
  public static IElementType FN_CALL_ARG = new KarateJsElementType("FN_CALL_ARG");
  public static IElementType ASSIGN_EXPR = new KarateJsElementType("ASSIGN_EXPR");
  public static IElementType LOGIC_EXPR = new KarateJsElementType("LOGIC_EXPR");
  public static IElementType LOGIC_AND_EXPR = new KarateJsElementType("LOGIC_AND_EXPR");
  public static IElementType LOGIC_TERN_EXPR = new KarateJsElementType("LOGIC_TERN_EXPR");
  public static IElementType LOGIC_BIT_EXPR = new KarateJsElementType("LOGIC_BIT_EXPR");
  public static IElementType MATH_ADD_EXPR = new KarateJsElementType("MATH_ADD_EXPR");
  public static IElementType MATH_MUL_EXPR = new KarateJsElementType("MATH_MUL_EXPR");
  public static IElementType MATH_EXP_EXPR = new KarateJsElementType("MATH_EXP_EXPR");
  public static IElementType MATH_POST_EXPR = new KarateJsElementType("MATH_POST_EXPR");
  public static IElementType MATH_PRE_EXPR = new KarateJsElementType("MATH_PRE_EXPR");
  public static IElementType PATH_EXPR = new KarateJsElementType("PATH_EXPR");
  public static IElementType REF_EXPR = new KarateJsElementType("REF_EXPR");
  public static IElementType REF_DOT_EXPR = new KarateJsElementType("REF_DOT_EXPR");
  public static IElementType REF_BRACKET_EXPR = new KarateJsElementType("REF_BRACKET_EXPR");
  public static IElementType UNARY_EXPR = new KarateJsElementType("UNARY_EXPR");
  public static IElementType LIT_OBJECT = new KarateJsElementType("LIT_OBJECT");
  public static IElementType OBJECT_ELEM = new KarateJsElementType("OBJECT_ELEM");
  public static IElementType LIT_ARRAY = new KarateJsElementType("LIT_ARRAY");
  public static IElementType ARRAY_ELEM = new KarateJsElementType("ARRAY_ELEM");
  public static IElementType LIT_EXPR = new KarateJsElementType("LIT_EXPR");
  public static IElementType PAREN_EXPR = new KarateJsElementType("PAREN_EXPR");
  public static IElementType LIT_TEMPLATE = new KarateJsElementType("LIT_TEMPLATE");
  public static IElementType PLACEHOLDER = new KarateJsElementType("PLACEHOLDER");


  public static final Map<Type, IElementType> TYPE_TO_ELEMENT_TYPE = new HashMap<>();

  static {
    TYPE_TO_ELEMENT_TYPE.put(Type._CHUNK, new KarateJsElementType("CHUNK"));
    TYPE_TO_ELEMENT_TYPE.put(Type.ROOT, new KarateJsElementType("ROOT"));
    TYPE_TO_ELEMENT_TYPE.put(Type.PROGRAM, new KarateJsElementType("PROGRAM"));
    TYPE_TO_ELEMENT_TYPE.put(Type.STATEMENT, new KarateJsElementType("STATEMENT"));
    TYPE_TO_ELEMENT_TYPE.put(Type.IF_STMT, new KarateJsElementType("IF_STMT"));
    TYPE_TO_ELEMENT_TYPE.put(Type.VAR_STMT, new KarateJsElementType("VAR_STMT"));
    TYPE_TO_ELEMENT_TYPE.put(Type.VAR_STMT_NAMES, new KarateJsElementType("VAR_STMT_NAMES"));
    TYPE_TO_ELEMENT_TYPE.put(Type.RETURN_STMT, new KarateJsElementType("RETURN_STMT"));
    TYPE_TO_ELEMENT_TYPE.put(Type.TRY_STMT, new KarateJsElementType("TRY_STMT"));
    TYPE_TO_ELEMENT_TYPE.put(Type.THROW_STMT, new KarateJsElementType("THROW_STMT"));
    TYPE_TO_ELEMENT_TYPE.put(Type.FOR_STMT, new KarateJsElementType("FOR_STMT"));
    TYPE_TO_ELEMENT_TYPE.put(Type.WHILE_STMT, new KarateJsElementType("WHILE_STMT"));
    TYPE_TO_ELEMENT_TYPE.put(Type.SWITCH_STMT, new KarateJsElementType("SWITCH_STMT"));
    TYPE_TO_ELEMENT_TYPE.put(Type.CASE_BLOCK, new KarateJsElementType("CASE_BLOCK"));
    TYPE_TO_ELEMENT_TYPE.put(Type.DEFAULT_BLOCK, new KarateJsElementType("DEFAULT_BLOCK"));
    TYPE_TO_ELEMENT_TYPE.put(Type.BREAK_STMT, new KarateJsElementType("BREAK_STMT"));
    TYPE_TO_ELEMENT_TYPE.put(Type.DELETE_STMT, new KarateJsElementType("DELETE_STMT"));
    TYPE_TO_ELEMENT_TYPE.put(Type.BLOCK, new KarateJsElementType("BLOCK"));
    TYPE_TO_ELEMENT_TYPE.put(Type.EOS, new KarateJsElementType("EOS"));
    TYPE_TO_ELEMENT_TYPE.put(Type.EXPR, new KarateJsElementType("EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.FN_EXPR, new KarateJsElementType("FN_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.FN_ARROW_EXPR, new KarateJsElementType("FN_ARROW_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.FN_DECL_ARGS, new KarateJsElementType("FN_DECL_ARGS"));
    TYPE_TO_ELEMENT_TYPE.put(Type.FN_DECL_ARG, new KarateJsElementType("FN_DECL_ARG"));
    TYPE_TO_ELEMENT_TYPE.put(Type.NEW_EXPR, new KarateJsElementType("NEW_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.TYPEOF_EXPR, new KarateJsElementType("TYPEOF_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.INSTANCEOF_EXPR, new KarateJsElementType("INSTANCEOF_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.FN_CALL_EXPR, new KarateJsElementType("FN_CALL_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.FN_CALL_ARGS, new KarateJsElementType("FN_CALL_ARGS"));
    TYPE_TO_ELEMENT_TYPE.put(Type.FN_CALL_ARG, new KarateJsElementType("FN_CALL_ARG"));
    TYPE_TO_ELEMENT_TYPE.put(Type.ASSIGN_EXPR, new KarateJsElementType("ASSIGN_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.LOGIC_EXPR, new KarateJsElementType("LOGIC_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.LOGIC_AND_EXPR, new KarateJsElementType("LOGIC_AND_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.LOGIC_TERN_EXPR, new KarateJsElementType("LOGIC_TERN_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.LOGIC_BIT_EXPR, new KarateJsElementType("LOGIC_BIT_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.MATH_ADD_EXPR, new KarateJsElementType("MATH_ADD_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.MATH_MUL_EXPR, new KarateJsElementType("MATH_MUL_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.MATH_EXP_EXPR, new KarateJsElementType("MATH_EXP_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.MATH_POST_EXPR, new KarateJsElementType("MATH_POST_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.MATH_PRE_EXPR, new KarateJsElementType("MATH_PRE_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.PATH_EXPR, new KarateJsElementType("PATH_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.REF_EXPR, new KarateJsElementType("REF_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.REF_DOT_EXPR, new KarateJsElementType("REF_DOT_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.REF_BRACKET_EXPR, new KarateJsElementType("REF_BRACKET_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.UNARY_EXPR, new KarateJsElementType("UNARY_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.LIT_OBJECT, new KarateJsElementType("LIT_OBJECT"));
    TYPE_TO_ELEMENT_TYPE.put(Type.OBJECT_ELEM, new KarateJsElementType("OBJECT_ELEM"));
    TYPE_TO_ELEMENT_TYPE.put(Type.LIT_ARRAY, new KarateJsElementType("LIT_ARRAY"));
    TYPE_TO_ELEMENT_TYPE.put(Type.ARRAY_ELEM, new KarateJsElementType("ARRAY_ELEM"));
    TYPE_TO_ELEMENT_TYPE.put(Type.LIT_EXPR, new KarateJsElementType("LIT_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.PAREN_EXPR, new KarateJsElementType("PAREN_EXPR"));
    TYPE_TO_ELEMENT_TYPE.put(Type.LIT_TEMPLATE, new KarateJsElementType("LIT_TEMPLATE"));
    TYPE_TO_ELEMENT_TYPE.put(Type.PLACEHOLDER, new KarateJsElementType("PLACEHOLDER"));
  }
}